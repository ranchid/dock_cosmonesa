volumes:
  postgres_data:
  postgres_data_backups: {}

services:
  postgres:
    build: 
      dockerfile: compose/db_postgres/Dockerfile
    image: cosmonesa/pg
    container_name: cosmonesa_pg
    environment:
      - POSTGRES_MULTIPLE_DATABASES=dummy_backend,cosmonesa_db
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ./compose/db_postgres/pg_multi_db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    ports:
      - 127.0.0.1:5433:5432
  webapp:
    build:
      context: compose/webapp
      dockerfile: Dockerfile
      target: dev
    image: cosmonesa/webapp
    container_name: cosmonesa_webapp
    volumes:
      # - ./cosmonesa10:/var/www/html:Z
      - .:/var/www:Z
      # - ./compose/webapp/php_config.ini:/usr/local/etc/php/php_config.ini:z
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - DB_DATABASE=cosmonesa_db
    expose:
      - 9000
    depends_on:
      postgres:
        condition: service_started
  dummy_backend:
    build:
      context: compose/dummy_backend/
      dockerfile: Dockerfile
      target: dev
    image: cosmonesa/dummy_backend
    container_name: cosmonesa_dummy_backend
    volumes:
      # - ./dummy_backend:/var/www/html:Z
      - .:/var/www:Z
      # - ./compose/dummy_backend/php_config.ini:/usr/local/etc/php/php_config.ini:z
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - DB_DATABASE=dummy_backend
    expose:
      - 9000
    depends_on:
      postgres:
        condition: service_started
  webserver:
    image: nginx:stable-bookworm
    volumes:
      - ./cosmonesa10:/var/www/cosmonesa10:ro,Z
      - ./compose/nginx/cosmonesa10.conf:/etc/nginx/conf.d/cosmonesa10.conf
      - ./dummy_backend:/var/www/dummy_backend:ro,Z
      - ./compose/nginx/dummy_backend.conf:/etc/nginx/conf.d/dummy_backend.conf
    environment:
      - TS=${TZ}
    ports:
      - 127.0.0.1:8000:8000
      - 127.0.0.1:8080:8080
    depends_on:
      webapp:
        condition: service_started
      dummy_backend:
        condition: service_started

  # backend:
  #   build:
  #     dockerfile: compose/develop/backend/Dockerfile
  #   image: cosmonesa/backend
  #   container_name: cosmonesa_backend
  #   volumes:
  #     - backend:/var/www/html:Z
  #     - compose/develop/backend/php_config.ini:/usr/local/etc/php/php_config.ini:z
  #   environment:
  #     - TZ=${TZ}
  #   expose:
  #     - 9000
  
  # frontend:
  #   build: 
  #     dockerfile: compose/develop/frontend/Dockerfile
  #   image: cosmonesa/frontend
  #   container_name: cosmonesa_frontend
  #   volumes:
  #     - frontend:/webapps:Z
  #   command: [npm bla bla]


    